#!/bin/sh

#  @configure_input@

#
#  This file is part of the Score-P software (http://www.score-p.org)
#
#  Copyright (c) 2015,
#  Technische Universitaet Dresden, Germany
#
#  This software may be modified and distributed under the terms of
#  a BSD-style license.  See the COPYING file in the package base
#  directory for details.
#

#  file test/constructor_checks/run_constructor_checks.sh.in

set -e

case $0 in
    (*/*) : called by path ;;
    (*)
        echo >&2 "$0: must be called by path"
        exit 1
    ;;
esac

dir=${0%/*}

EXEEXT=@EXEEXT@
GREP=@GREP@

SCOREP_VERBOSE=true
SCOREP_EXPERIMENT_DIRECTORY=scorep-constructor_check
SCOREP_ENABLE_PROFILE=false
SCOREP_ENABLE_TRACING=false
export SCOREP_VERBOSE \
       SCOREP_EXPERIMENT_DIRECTORY \
       SCOREP_ENABLE_PROFILE \
       SCOREP_ENABLE_TRACING

cleanup()
{
    rm -rf $SCOREP_EXPERIMENT_DIRECTORY
}
trap cleanup EXIT

paradigm_threads="none"
@HAVE_OPENMP_SUPPORT_TRUE@paradigm_threads="$paradigm_threads omp"

for thread in $paradigm_threads
do
    cleanup
    printf "Running Score-P constructor check for C ($thread) "
    $dir/constructor_check_${thread}_c$EXEEXT 2>&1 >/dev/null |
        $GREP -q 'initialized via constructor' &&
        echo " ok" ||
        {
            echo " FAILED"
            exit 1
        }

    cleanup
    printf "Running Score-P constructor check for C++ ($thread) "
    $dir/constructor_check_${thread}_cxx$EXEEXT 2>&1 >/dev/null |
        $GREP -q 'initialized via constructor' &&
        echo " ok" ||
        {
            echo " FAILED"
            exit 1
        }

    cleanup
    printf "Running Score-P constructor check for Fortran ($thread) "
    $dir/constructor_check_${thread}_f$EXEEXT 2>&1 >/dev/null |
        $GREP -q 'initialized via constructor' &&
        echo " ok" ||
        {
            echo " FAILED"
            exit 1
        }
done #thread
